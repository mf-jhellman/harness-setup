pipeline:
  name: zztest-canary-deployment
  identifier: zztestcanarydeployment
  projectIdentifier: tiger
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Approve to Start Deployment
        identifier: Approve_to_Start_Deployment
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Approve to Start Deployment
                  identifier: Approve_to_Start_Deployment
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: Approve to start the deployment
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                    approverInputs: []
        tags: {}
        when:
          pipelineStatus: Failure
    - stage:
        name: Canary Deploy
        identifier: Canary_Deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: zztest
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: <+input>
            deployToAll: false
            environmentInputs: <+input>
            serviceOverrideInputs: <+input>
            infrastructureDefinitions: <+input>
          execution:
            steps:
              - stepGroup:
                  name: Provision Infrastructure
                  identifier: Provision_Infrastructure
                  steps:
                    - step:
                        type: TerraformPlan
                        name: Terraform Plan
                        identifier: Terraform_Plan
                        spec:
                          configuration:
                            command: Apply
                            workspace: zztest-<+stage.variables.target_env>
                            configFiles:
                              store:
                                type: Github
                                spec:
                                  gitFetchType: Branch
                                  connectorRef: mfjhellman
                                  repoName: harness-test-app
                                  branch: <+input>
                                  folderPath: terraform/deploy
                            secretManagerRef: harnessSecretManager
                            varFiles:
                              - varFile:
                                  type: Remote
                                  identifier: env vars
                                  spec:
                                    store:
                                      type: Github
                                      spec:
                                        gitFetchType: Branch
                                        repoName: harness-test-app
                                        branch: <+input>
                                        paths:
                                          - deploy/terraform/vars/<+targetadeploy/terraform/vars/<+stage.variables.target_env>.tfvars
                                        connectorRef: mfjhellman
                          provisionerIdentifier: zztest<+stage.variables.target_env>
                        timeout: 10m
                    - step:
                        type: TerraformApply
                        name: Terraform Apply
                        identifier: Terraform_Apply
                        spec:
                          configuration:
                            type: InheritFromPlan
                          provisionerIdentifier: zztest<+stage.variables.target_env>
                        timeout: 10m
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDepoyment
                  steps:
                    - step:
                        type: K8sApply
                        name: Manage Base Resources
                        identifier: Manage_Base_Resources
                        spec:
                          filePaths:
                            - base/namespace.yaml
                            - base/ingress.yaml
                            - base/service.yaml
                          skipDryRun: false
                          skipSteadyStateCheck: false
                          skipRendering: false
                          overrides:
                            - manifest:
                                identifier: " base"
                                type: Values
                                spec:
                                  store:
                                    type: Github
                                    spec:
                                      connectorRef: mfjhellman
                                      gitFetchType: Branch
                                      paths:
                                        - deploy/k8s/base/values.yaml
                                      repoName: harness-test-app
                                      branch: main
                        timeout: 10m
                        failureStrategies: []
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            spec:
                              percentage: 50
                            type: Percentage
                          skipDryRun: false
                        failureStrategies: []
                    - step:
                        type: ShellScript
                        name: sleep
                        identifier: sleep
                        spec:
                          shell: Bash
                          onDelegate: true
                          source:
                            type: Inline
                            spec:
                              script: sleep 60
                          environmentVariables: []
                          outputVariables: []
                        timeout: 10m
                    - step:
                        type: Verify
                        name: Verify via New Relic
                        identifier: Verify_via_New_Relic
                        spec:
                          type: Canary
                          monitoredService:
                            type: Default
                            spec: {}
                          spec:
                            sensitivity: HIGH
                            duration: 5m
                            deploymentTag: <+serviceConfig.artifacts.primary.tag>
                        timeout: 2h
                        failureStrategies:
                          - onFailure:
                              errors:
                                - Verification
                              action:
                                type: ManualIntervention
                                spec:
                                  timeout: 2h
                                  onTimeout:
                                    action:
                                      type: StageRollback
                          - onFailure:
                              errors:
                                - Unknown
                              action:
                                type: ManualIntervention
                                spec:
                                  timeout: 2h
                                  onTimeout:
                                    action:
                                      type: Ignore
                        when:
                          stageStatus: Failure
                    - step:
                        name: Canary Delete
                        identifier: canaryDelete
                        type: K8sCanaryDelete
                        timeout: 10m
                        spec:
                          skipDryRun: false
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: false
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
        variables:
          - name: name
            type: String
            description: ""
            value: hello-world
          - name: target_env
            type: String
            description: ""
            value: <+input>
