pipeline:
  name: zztest-canary-deployment
  identifier: zztestcanarydeployment
  projectIdentifier: tiger
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: Approve to Begin Deployment
        identifier: Approve_to_Begin_Deployment
        description: ""
        type: Approval
        spec:
          execution:
            steps:
              - step:
                  name: Approve to Begin Deployment
                  identifier: Approve_to_Begin_Deployment
                  type: HarnessApproval
                  timeout: 1d
                  spec:
                    approvalMessage: Approve to begin the deployment
                    includePipelineExecutionHistory: true
                    approvers:
                      minimumCount: 1
                      disallowPipelineExecutor: false
                      userGroups:
                        - account._account_all_users
                    approverInputs: []
                  when:
                    stageStatus: Failure
                  failureStrategies: []
        tags: {}
    - stage:
        name: Provision Infrastructure
        identifier: Provision_Infrastructure
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: TerraformPlan
                  name: Terraform Plan
                  identifier: Terraform_Plan
                  spec:
                    configuration:
                      command: Apply
                      workspace: <+stage.variables.target_env>
                      configFiles:
                        store:
                          type: Github
                          spec:
                            gitFetchType: Branch
                            connectorRef: mfjhellman
                            repoName: harness-test-app
                            branch: jared-wip
                            folderPath: deploy/terraform
                      secretManagerRef: harnessSecretManager
                      varFiles:
                        - varFile:
                            type: Remote
                            identifier: target vars
                            spec:
                              store:
                                type: Github
                                spec:
                                  gitFetchType: Branch
                                  repoName: harness-test-app
                                  branch: jared-wip
                                  paths:
                                    - deploy/terraform/vars/<+stage.variables.target_env>.tfvars
                                  connectorRef: mfjhellman
                    provisionerIdentifier: zztest
                  timeout: 10m
              - step:
                  type: HarnessApproval
                  name: Approve Plan
                  identifier: Approve_Plan
                  spec:
                    approvalMessage: Review the plan and make sure all changes are expected
                    includePipelineExecutionHistory: true
                    approvers:
                      userGroups:
                        - account._account_all_users
                      minimumCount: 1
                      disallowPipelineExecutor: false
                    approverInputs: []
                  timeout: 1d
              - step:
                  type: TerraformApply
                  name: Terraform Apply
                  identifier: Terraform_Apply
                  spec:
                    configuration:
                      type: InheritFromPlan
                    provisionerIdentifier: zztest
                  timeout: 10m
        tags: {}
        variables:
          - name: target_env
            type: String
            description: ""
            value: <+input>
    - stage:
        name: Canary Deploy App
        identifier: Canary_Deploy_App
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: zztest
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  manifests:
                    - manifest:
                        identifier: zztest
                        type: HelmChart
                        spec:
                          store:
                            type: Github
                            spec:
                              branch: <+input>
          environment:
            environmentRef: cdtooling2eksv2
            deployToAll: false
            infrastructureDefinitions: <+input>
          execution:
            steps:
              - stepGroup:
                  name: Canary Deployment
                  identifier: canaryDepoyment
                  steps:
                    - step:
                        name: Canary Deployment
                        identifier: canaryDeployment
                        type: K8sCanaryDeploy
                        timeout: 10m
                        spec:
                          instanceSelection:
                            type: Count
                            spec:
                              count: <+input>
                          skipDryRun: false
                        failureStrategies: []
              - stepGroup:
                  name: Primary Deployment
                  identifier: primaryDepoyment
                  steps:
                    - step:
                        name: Rolling Deployment
                        identifier: rollingDeployment
                        type: K8sRollingDeploy
                        timeout: 10m
                        spec:
                          skipDryRun: true
                          pruningEnabled: false
                        failureStrategies: []
            rollbackSteps:
              - step:
                  name: Canary Delete
                  identifier: rollbackCanaryDelete
                  type: K8sCanaryDelete
                  timeout: 10m
                  spec: {}
              - step:
                  name: Rolling Rollback
                  identifier: rollingRollback
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
