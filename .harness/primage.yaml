inputSet:
  identifier: "primage"
  name: "primage"
  tags: {}
  orgIdentifier: "default"
  projectIdentifier: "tiger"
  pipeline:
    identifier: "zztestcanarydeployment"
    stages:
    - stage:
        identifier: "Canary_Deploy"
        type: "Deployment"
        spec:
          service:
            serviceInputs:
              serviceDefinition:
                type: "Kubernetes"
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: "http-echo"
                      sources:
                      - identifier: "http-echo"
                        type: "DockerRegistry"
                        spec:
                          tag: "<+trigger.artifact.build>"
          environment:
            environmentRef: "cdtooling2eksv2"
            infrastructureDefinitions:
            - identifier: "ephemeralenv"
              inputs:
                identifier: "ephemeralenv"
                type: "KubernetesDirect"
                spec:
                  namespace: "<+trigger.artifact.build>"
          execution:
            steps:
            - stepGroup:
                identifier: "Provision_Infrastructure"
                steps:
                - step:
                    identifier: "Terraform_Plan"
                    type: "TerraformPlan"
                    spec:
                      configuration:
                        configFiles:
                          store:
                            type: "Github"
                            spec:
                              branch: "main"
                        varFiles:
                        - varFile:
                            identifier: "env vars"
                            type: "Remote"
                            spec:
                              store:
                                type: "Github"
                                spec:
                                  branch: "main"
        variables:
        - name: "target_env"
          type: "String"
          value: "<+trigger.artifact.build>"
